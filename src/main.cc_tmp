
#include <iostream>
#include "include/Record.h"
#include <stdlib.h>
using namespace std;

extern "C" {
	int yyparse(void);   // defined in y.tab.c
}

extern struct AndList *final;

int main () {

	// suck up the schema from the file
	Schema lineitem ("catalog", "lineitem");

    FILE *tableFile = fopen ("/Users/westsnow/Documents/workspace/dbi/stage1/summer-snow/src/Data/10M/lineitem.tbl.small", "r");

    Record tmp;
    Page page;
    File file;
    file.Open(0, "myfile");

    // cout<<"file's length is " << file.GetLength()<<endl;

    // cout<<"the page's numRecs is "<<page.numRecs<<" and curSizeInBytes is " << page.curSizeInBytes<<endl;

	while(tmp.SuckNextRecord(&lineitem, tableFile) ){
		//tmp.Print(&lineitem);
		if(page.Append(&tmp)){
				cout<<"the page's numRecs is "<<page.numRecs<<" and curSizeInBytes is " << page.curSizeInBytes<<endl;
		}
		else{
			file.AddPageToEnd(&page);
			page.EmptyItOut();
			cout<<"file's length is " << file.GetLength()<<endl;
		}
	}

	file.AddPageToEnd(&page);
			cout<<"file's length is " << file.GetLength()<<endl;

	// Page pageRead;
	// file.GetPage(&pageRead, file.GetLength()-2);

	// cout<<"page's recordnum is " << pageRead.numRecs <<endl;

	//file.Close();

}


